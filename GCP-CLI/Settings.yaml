sqlServer: 
    name: "Sql server fully qualified domain name"
    databaseName: "Database name"
    userName: "Sql username"
    password: "Sql password"
profiseeRunTime:
    useLetsEncrypt: false
    adminAccount: "Email/account of the first super user who will be registered with Profisee, who will be able to logon and add other users."
    fileRepository:
        accountName: ""
        userName: "user manager\\containeradministrator"
        password: ""
        logonType: "NewCredentials"
        location: "c:\\fileshare"
        fileShareName: ""
    externalDnsUrl: "url to profisee endpoint eg: https://profiseemdm.mycompany.com"
    externalDnsName: "web url to profisee endpoint eg: profiseemdm.mycompany.com"
    oidc:
        name: "Authority name eg: Okta or Azure Active Directory"
        authority: "Authority url  eg: https://mycompany.okta.com/oauth2/default"
        clientId: "Authority client id eg: acbdefghijklmnop"
        clientSecret: "Authority client secret"
        usernameClaim: "Authority username claim name.  eg: preferred_username or http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
        userIdClaim: "Authority userid claim name.  eg: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"
        firstNameClaim: "Authority first name claim name.  eg: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"
        lastNameClaim: "Authority last name claim name.  eg: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"
        emailClaim: "Authority email claim name.  eg: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
    clusterNodeCount: 1
clusterNode:
    limits:
      cpu: 1000
      memory: 10T
    requests:
      cpu: 1
      memory: 1000M        
image:
    registry: "profisee.azurecr.io"
    repository: "profiseeplatform"
    tag: "2021r1.0"
    auth: |
        {
           "auths":{
              "profisee.azurecr.io":{
                 "username":"Username supplied by Profisee support",
                 "password":"Username supplied by Profisee support",
                 "email":"support@profisee.com",
                 "auth":"Username supplied by Profisee support"
              }
           }
        }
licenseFileData: License string provided by Profisee support
preInitScriptData: Cg==
postInitScriptData: Cg==
oidcFileData: |
    {      
    }
tlsCert: |
    -----BEGIN CERTIFICATE-----
    Add certificate string with opening and closing tags like this
    -----END CERTIFICATE-----

tlsKey: |
    -----BEGIN PRIVATE KEY-----
    Add certificate key string with opening and closing tags like this
    -----END PRIVATE KEY-----  
 
cloud:
    azure:
      isProvider: false      
    aws:
      isProvider: false
      ebsVolumeId: ""
    google:
      isProvider: true
      gceVolumeName: "name of existing disk"     